include "src/hardware.inc"
include "src/global.inc"

; Stage 5: Super Game Boy and joypads ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; TODO: once full, reorder routines to match their on-screen ordering

section "STAGE5COINS", ROM0

coin_no_sgbc::
  jr .start
  db "No such thing as SGBC",10
  db "GBC (A=$11) doesn't support",10
  db "SGB multiplayer (MLT_REQ)",0
.start:
  ldh a, [hCapability]
  and $81
  cp $81
  ccf
  ret

coin_lcdc_on_mode_0::
  jr .start
  db "LCD begins in mode 0",10
  db "The first scanline after",10
  db "turning on LCD begins with",10
  db "hblank (mode 0) instead of",10
  db "OAM scan (mode 2)",0
.start:
  call lcd_off

  ; make sure the vblank has completely ended
  ld b, 0
  .wait_frame_end:  ; 14 cycles per iteration
    call .knownret
    dec b
    jr nz, .wait_frame_end
  
  ld b, b
  ld c, low(rSTAT)
  ld a, LCDCF_ON|LCDCF_BGON|LCDCF_BG8800|LCDCF_BG9800
  ldh [rLCDC], a
  ldh a, [c]
  and $03
  cp $01  ; mode 2 (OAM scan): fail; mode 3 (rendering): pass
  ccf
.knownret:
  ret

coin_no_43::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_44::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_45::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_46::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_47::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_48::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_49::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

coin_no_50::
  jr .start
  db "Always pass",0
.start:
  or a
  ret

