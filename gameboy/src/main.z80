include "src/hardware.inc"
include "src/global.inc"

SECTION "main", ROM0

DEF COINCELS_TILE equ $23
DEF LOGO_IDOT_XY equ $982B
DEF SHOW_TITLE_SCREEN equ 0
DEF MIN_STAGES_FOR_BORDER equ 2

main::
  xor a
  ldh [rIF],a
  ldh [nmis],a


  if WITH_DEBUGHEX
  ld hl, debughex
  ld [hl], $C0
  inc hl
  ld [hl], $DE
  endc

  ; During the copyright screen (once I get it in), we'll have
  ; up to 4 seconds to run tests.
  xor a
  call run_tests_in_stage_a
  ld a, 1
  call run_tests_in_stage_a
  ld a, 2
  call run_tests_in_stage_a
  ld a, 3
  call run_tests_in_stage_a
  ld a, 4
  call run_tests_in_stage_a

  call log_coins_to_sram

  call count_completed_stages
  cp MIN_STAGES_FOR_BORDER
  jr c, .no_sgb_border
    ld hl, $2000
    ld [hl], bank(sgb_send_main_border)
    call sgb_send_main_border
  .no_sgb_border:
  call lcd_on_blank
  call sgb_unfreeze

  if SHOW_TITLE_SCREEN

  ; Load title screen
  call lcd_off
  call clear_scrn0_to_0
  ld hl, CHRRAM2
  call load_logo

  ld hl, titlelabels
  ld de, $880
  call vwfDrawLabels

  ld a,IEF_VBLANK
  ldh [rIE],a  ; enable IRQs
  ld a, %01101100
  ldh [rBGP], a
  ld a, LCDCF_ON|LCDCF_BGON|LCDCF_BG8800|LCDCF_BG9800
  ldh [vblank_lcdc_value], a
  ldh [rLCDC], a
  ei
.waitloop:
  rst wait_vblank_irq

  call logo_cycle_spinning_coin_above_i

  call read_pad
  ldh a, [hNewKeys]
  and PADF_A|PADF_START
  jr z, .waitloop

  endc

  jp show_stages

def COINCELS_CHR_DST equ COINCELS_TILE*$10
;;
; @param HL place to put logo tiles: $8000 or $9000
load_logo::
  push hl
  ld de, logo_iur
  call unpack_iu_file

  ; Load the spinning coin
  pop de
  ld a, d
  or high(COINCELS_CHR_DST)
  ld d, a
  ld a, e
  or low(COINCELS_CHR_DST)
  ld e, a
  ld hl, coincels_2b
  ld bc, 5*$10
  call memcpy


  ldh a, [hCapability]
  rra
  jr nc, .no_sgb_palette
    ld hl, sgbpalette_pal01
    call sgb_send
    call sgb_send
  .no_sgb_palette:

  ldh a, [hCapability]
  add a
  jr nc, .no_gbc_palette
    call clear_gbc_attr
    ld a, 1
    ldh [rVBK], a
    ld [LOGO_IDOT_XY], a
    xor a
    ldh [rVBK], a

    ld hl, logo_palette_gbc
    ld a, $80
    lb bc, logo_palette_gbc.obj-logo_palette_gbc, LOW(rBCPS)
    call set_gbc_palette
    ld a, $80
    lb bc, logo_palette_gbc.end-logo_palette_gbc.obj, LOW(rOCPS)
    call set_gbc_palette
  .no_gbc_palette:

  ld hl, SCRN_TMP
  ldxy de, 0, 2
  lb bc, 20, 3
  jp load_nam

logo_hide_spinning_coin_above_i::
  ld hl, LOGO_IDOT_XY
  ld [hl], 0
  ret

logo_stop_spinning_coin_above_i::
  ld hl, LOGO_IDOT_XY
  ld [hl], COINCELS_TILE
  ret

logo_cycle_spinning_coin_above_i::
  ld b, COINCELS_TILE
  ld hl, LOGO_IDOT_XY
logo_cycle_spinning_coin:
  ; 0, 1, 2, 3, 4, 3, 2, 1... 
  ldh a, [nmis]
  rra
  rra
  rra
  and $07
  cp 5
  jr c, .norev
    cpl  ; ff, fe, fd, fc, fb, fa, f9, f8
    sub $FA-3
  .norev:
  add b
  ld [hl], a
  ret

sgbpalette_pal01:
  db ($00<<3)|1  ; PAL01
  drgb $ffffff  ; 20 majority of screen: money green
  drgb $88bb00  ; 29
  drgb $336600  ; 19
  drgb $000000  ; 0F
  drgb $ffda49  ; spinning ooin
  drgb $af8a00  ;
  drgb $5a4a00  ;
  db $00
sgbpalette_attr:
  db ($04<<3)|1 ; ATTR_BLK
  db 2
  db %111  ; outside, border, inside
  db %00000001 ; outside and border 0, inside 1
  db 10, 0, 12, 2  ; the coin
  db %011  ; border, inside
  db %00000101 ; border & inside 1
  db 12, 2, 14, 4  ; the "s" in Numism is for Super Game Boy
.end:
  ds 16-(.end-sgbpalette_attr), $00

logo_palette_gbc:
  ; GBC mode disregards BGP.  Instead, palette order
  ; (white, black, dark, light) is baked into the palette data.
  drgb $ffffff  ; 20 majority of screen: money green
  drgb $000000  ; 0F
  drgb $339900  ; 19
  drgb $66ff00  ; 29
  drgb $ffffff
  drgb $5a4a00  ; spinning ooin
  drgb $af8a00  ;
  drgb $ffda49  ;
.obj:
  drgb $ffffff
  drgb $000000
  drgb $666666
  drgb $b2b2b2
.end:

logo_iur: incbin "obj/gb/logo.iur"
coincels_2b: incbin "obj/gb/coincels.2b"
titlelabels:
  db 8, 56, "I'm at the platform game", 10
  db 8, 64, "I'm at the emu test", 10
  db 8, 72, "I'm at the combination", 10
  db 8, 80, "platform game and emu test", 10
  db 8, 128, $7F, " 2023 Damian Yerrick", 0
